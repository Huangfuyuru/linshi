执行上下文
执行上下文指的是当前代码的执行环境，当控制器遇到可执行代码的时候，遇到全局环境，函数环境，eval时会产生一个执行上下文。一个程序中会有很多的执行上下文，JS引擎会以栈的方式来处理他们，这个栈，我们成为函数调用栈。栈底永远都是全局上下文，而栈顶是当前正在执行的上下文。栈顶的上下文执行完毕后，就会自动出栈。每一个执行上下文会形成一个作用域，作用域的含义其实就是一套约定好的规则。我们写代码的时候需要按照这套规则来，V8引擎对JS源码解析也是按照这个规则。
执行上下文的生命周期分为创建(生成变量对象，建立作用域链，确定this指向)和执行(变量赋值，函数引用，执行其他代码)
作用域链，是由当前环境与上层环境的一系列变量对象组成，他保证了当前执行环境对符号访问权限的变量和函数的有序访问。